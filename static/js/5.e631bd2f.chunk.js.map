{"version":3,"sources":["views/RegisterView/RegisterView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView/RegisterView.module.css"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","console","warn","className","style","container","title","form","autoComplete","onSubmit","e","preventDefault","authOperations","register","label","type","onChange","placeholder","button","list","item","span","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"wPAQe,SAASA,IACtB,IAAMC,EAASC,cAEb,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXP,EAAgBO,EAAhBP,KAAMQ,EAAUD,EAAVC,MACd,OAAQR,GACJ,IAAK,OACDC,EAAQO,GACR,MACH,IAAK,QACFL,EAASK,GACT,MACH,IAAK,WACFH,EAAYG,GACZ,MACJ,QACIC,QAAQC,KAAK,uBAczB,OACQ,sBAAKC,UAAWC,IAAMC,UAAtB,UACI,oBAAIF,UAAWC,IAAME,MAArB,+BACA,uBACIH,UAAWC,IAAMG,KACjBC,aAAa,MACbC,SAhBK,SAACC,GAClBA,EAAEC,iBAEFtB,EAASuB,IAAeC,SAAS,CAAErB,OAAME,QAAOE,cAEhDD,EAAS,IACTF,EAAQ,IACRI,EAAY,KAMJ,UAMI,wBAAOM,UAAWC,IAAMU,MAAxB,6BAEI,uBACIC,KAAK,OACLvB,KAAK,OACLQ,MAAOR,EACPwB,SAAUlB,EACVmB,YAAY,0BAEpB,wBAAOd,UAAWC,IAAMU,MAAxB,kBAEI,uBACIC,KAAK,QACLvB,KAAK,QACLQ,MAAON,EACPsB,SAAUlB,EACVmB,YAAY,sCAEpB,wBAAOd,UAAWC,IAAMU,MAAxB,qBAEI,uBACIC,KAAK,WACLvB,KAAK,WACLQ,MAAOJ,EACPoB,SAAUlB,EACVmB,YAAY,sBAGpB,wBACIF,KAAK,SACLZ,UAAWC,IAAMc,OAFrB,yBAMJ,qBAAIf,UAAWC,IAAMe,KAArB,UACG,qBAAIhB,UAAWC,IAAMgB,KAArB,UAA2B,sBAAMjB,UAAWC,IAAMiB,KAAvB,wBAA3B,gEACC,qBAAIlB,UAAWC,IAAMgB,KAArB,UAA2B,sBAAMjB,UAAWC,IAAMiB,KAAvB,wBAA3B,8D,8ECnFL,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGnC,QAETwB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,6BAA6B,KAAO,2BAA2B,KAAO","file":"static/js/5.e631bd2f.chunk.js","sourcesContent":["//module\nimport React, {useState} from 'react';\nimport {useDispatch} from 'react-redux'\n//component\nimport {authOperations} from '../../redux/auth'\n//style\nimport style from './RegisterView.module.css'\n\nexport default function RegisterView() {\n  const dispatch=useDispatch()\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = ({target}) => {\n        const { name, value } = target\n        switch (name) {\n            case 'name':\n                setName(value);\n                break\n             case 'email':\n                setEmail(value);\n                break\n             case 'password':\n                setPassword(value);\n                break\n            default:\n                console.warn('sorry,input wrong')\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        dispatch(authOperations.register({ name, email, password }))\n        \n        setEmail('')\n        setName('')\n        setPassword('')\n     }\n\n    return (\n            <div className={style.container}>\n                <h1 className={style.title}>Registration Page</h1>\n                <form\n                    className={style.form}\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit}\n                    \n                >\n                    <label className={style.label}>\n                        Name and Surname\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            onChange={handleChange}\n                            placeholder=\"☞ Martin Iden\"\n                        /></label>\n                    <label className={style.label}\n                    >Email\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleChange}\n                            placeholder=\"☞ grafMonteCristo@mail.ru\"\n                        /></label>\n                    <label className={style.label}>\n                        Password\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={handleChange}\n                            placeholder=\"☞ *******\"\n                        /></label>\n                    \n                    <button\n                        type='submit'\n                        className={style.button}\n                    \n                    >Register</button>\n                </form>\n                <ul className={style.list}>\n                   <li className={style.item}><span className={style.span}>Attention!</span> Password must include one or more big letter and numbers.</li>\n                    <li className={style.item}><span className={style.span}>Attention!</span> Password must have be length 7 or more letters.</li>\n               \n                </ul>\n      </div>\n    )\n}\n\n// class RegisterView extends Component{\n//     state={\n//         name: '',\n//         email: '',\n//         password:'',\n//     }\n\n//     handleChange = ({ target: { name, value } }) => {\n//         this.setState({[name]:value})\n        \n//     }\n//     handleSubmit = e => {\n//         e.preventDefault()\n\n//         this.props.onRegister(this.state)\n\n//         this.setState({ name: '',\n//         email: '',\n//         password:'',})\n\n//     }\n\n\n//     render() {\n//         const { name, email, password } = this.state;\n//         // const { handleChange,handleSubmit } = this; \n//         const { form, label } = style;\n\n//         return (\n//             <div className={style.container}>\n//                 <h1 className={style.title}>Registration Page</h1>\n//                 <form\n//                     className={form}\n//                     autoComplete=\"off\"\n//                     onSubmit={this.handleSubmit}\n                    \n//                 >\n//                     <label className={label}>\n//                         Name and Surname\n//                         <input\n//                             type=\"text\"\n//                             name=\"name\"\n//                             value={name}\n//                             onChange={this.handleChange}\n//                             placeholder=\"☞ Martin Iden\"\n//                         /></label>\n//                     <label className={label}\n//                     >Email\n//                         <input\n//                             type=\"email\"\n//                             name=\"email\"\n//                             value={email}\n//                             onChange={this.handleChange}\n//                             placeholder=\"☞ grafMonteCristo@mail.ru\"\n//                         /></label>\n//                     <label className={label}>\n//                         Password\n//                         <input\n//                             type=\"password\"\n//                             name=\"password\"\n//                             value={password}\n//                             onChange={this.handleChange}\n//                             placeholder=\"☞ *******\"\n//                         /></label>\n                    \n//                     <button\n//                         type='submit'\n//                         className={style.button}\n                    \n//                     >Register</button>\n//                 </form>\n//                 <ul className={style.list}>\n//                    <li className={style.item}><span className={style.span}>Attention!</span> Password must include one or more big letter and numbers.</li>\n//                     <li className={style.item}><span className={style.span}>Attention!</span> Password must have be length 7 or more letters.</li>\n               \n//                 </ul>\n//       </div>\n//     )\n// }\n\n// }\n\n\n\n// const mapDispatchToProps = {\n//     onRegister: authOperations.register,\n    // onSubmit:(data)=>dispatch(authOperations.register(data))\n// }\n\n\n\n// export default connect(null,mapDispatchToProps)(RegisterView)\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterView_container__2gvx2\",\"title\":\"RegisterView_title__3fvKf\",\"form\":\"RegisterView_form__jLkqR\",\"label\":\"RegisterView_label__3FXZM\",\"button\":\"RegisterView_button__xljmR\",\"item\":\"RegisterView_item__2ZTP9\",\"span\":\"RegisterView_span__3IW69\"};"],"sourceRoot":""}