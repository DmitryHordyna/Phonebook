{"version":3,"sources":["redux/phonebook/action_phonebook.js","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operation.js","redux/auth/auth-actions.js","components/Container/Container.jsx","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/phonebook/reducers_phonebook.js","redux/store.js","routes.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["featchContactsRequest","createAction","featchContactsSuccess","featchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContact","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","getCurrentUser","dispatch","getState","a","persistedToken","auth","authActions","getCurrentUserRequest","get","response","getCurrentUserSuccess","data","getCurrentUserError","message","logOut","logoutRequest","post","logoutSuccess","logoutError","logIn","credentials","loginRequest","responce","loginSuccess","loginError","register","registerRequest","registerSuccess","registerError","Container","children","className","style","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","initialUserState","email","createReducer","_","payload","setPayloadToken","setError","error","combineReducers","items","allContacts","newContact","some","number","alert","filter","id","loading","authPersistConfig","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","key","storage","whitelist","store","configureStore","reducer","phonebook","contactReducer","persistReducer","authReducer","middleware","concat","logger","devTools","process","persistor","persistStore","routes","home","login","phonebooks","connect","authSelectors","to","exact","link","activeClassName","activeLink","AuthNav","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","container","src","alt","width","nameUser","type","onClick","button","header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","PhonebooksView","RegisterView","LoginView","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.378bb047.chunk.js","sourcesContent":["//module\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const featchContactsRequest = createAction(\n  'contact/featchContactsRequest',\n);\nexport const featchContactsSuccess = createAction(\n  'contact/featchContactsSuccess',\n);\nexport const featchContactsError = createAction('contact/featchContactsError');\n\nexport const addContactsRequest = createAction('contact/addContactsRequest');\nexport const addContactsSuccess = createAction('contact/addContactsSuccess');\nexport const addContactsError = createAction('contact/addContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contact/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contact/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contact/deleteContactsError');\n\nexport const filterContact = createAction('contact/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__GgYhE\",\"avatar\":\"UserMenu_avatar__2e7Jj\",\"name\":\"UserMenu_name__3e8KV\",\"nameUser\":\"UserMenu_nameUser__uIn2X\",\"button\":\"UserMenu_button__3mTE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","import axios from 'axios';\n\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const responce = await axios.post('/users/login', credentials);\n\n    token.set(responce.data.token);\n    dispatch(authActions.loginSuccess(responce.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { getCurrentUser, logOut, logIn, register };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","//module\nimport React from \"react\"\n//style\nimport style from './Container.module.css'\n\nconst Container = ({ children }) => <div className={style.Container}>{children}</div>\n\nexport default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default { getIsAuthenticated, getUsername };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst setPayloadToken = (_, { payload }) => payload.token;\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: setPayloadToken,\n  [authActions.loginSuccess]: setPayloadToken,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n\n  [authActions.logoutSuccess]: () => false,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({ isAuthenticated, user, token, error });\n","//module\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n//component\nimport {\n  featchContactsRequest,\n  featchContactsSuccess,\n  featchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  filterContact,\n} from './action_phonebook';\n\nconst items = createReducer([], {\n  [featchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => foundMatch(state, payload),\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nfunction foundMatch(allContacts, newContact) {\n  const chek = allContacts.some(\n    ({ name, number }) =>\n      name === newContact.name || number === newContact.number,\n  );\n  if (chek) {\n    alert(`You have this number or name!!!Sorry try again.`);\n    return allContacts;\n  } else {\n    return [newContact, ...allContacts];\n  }\n}\n\nconst loading = createReducer(false, {\n  [featchContactsRequest]: () => true,\n  [featchContactsSuccess]: () => false,\n  [featchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","//module\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n//component\nimport contactReducer from './phonebook/reducers_phonebook';\nimport { authReducer } from './auth';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nconst store = configureStore({\n  reducer: {\n    phonebook: contactReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { persistor, store };\n","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  phonebooks: '/phonebooks',\n};\n\nexport default routes;\n","//module\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport { authSelectors } from '../../redux/auth'\n//components\nimport routes from '../../routes';\n//style\nimport style from './Navigation.module.css'\n\nconst Navigation = ({isAuthenticated}) => (\n    <nav>\n        <NavLink to={routes.home} exact className={style.link} activeClassName={style.activeLink}>Main</NavLink>\n      { isAuthenticated && <NavLink to={routes.phonebooks} exact className={style.link} activeClassName={style.activeLink}>Phonebook</NavLink>}\n    </nav>\n)\n\n\nconst mapStateToProps = state=>({\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\n})\n\n\nexport default connect(mapStateToProps)(Navigation)","//module\nimport React from 'react'\nimport {NavLink} from 'react-router-dom'\n//components\nimport routes from '../../routes';\n//style\nimport style from './AuthNav.module.css'\n\nconst AuthNav = () => (\n    <div>\n<NavLink to={routes.register} exact className={style.link} activeClassName={style.activeLink}>Register</NavLink>\n<NavLink to={routes.login} exact className={style.link} activeClassName={style.activeLink}>Login</NavLink>\n    </div>\n)\nexport default AuthNav\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","//module\nimport React from 'react';\nimport { connect } from 'react-redux';\n//component\nimport { authSelectors,authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png'\n//style\nimport style from './UserMenu.module.css'\n\nconst UserMenu = ({avatar,name,onLogout}) => (\n    <div className={style.container}>\n        <img className={style.avatar}  src={avatar} alt=\"avatar\"  width=\"32\" />\n        <p className={style.name}>Welcome,<span className={style.nameUser}> {name} </span>!</p>\n        <button type='button' onClick={onLogout} className={style.button}>Log Out</button>\n    </div>\n)\n\nconst mapStateToProps = state => ({\n    name:authSelectors.getUsername(state),\n    avatar:defaultAvatar\n})\n\nconst mapDispatchToProps = {\n    onLogout:authOperations.logOut\n}\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(UserMenu)\n","//module\nimport React from 'react'\nimport { connect } from 'react-redux'\n//components\nimport Navigation from '../Navigation/Navigation'\nimport AuthNav from '../AuthNav'\nimport UserMenu from '../UserMenu'\nimport { authSelectors } from '../../redux/auth'\n\n//style\nimport style from './AppBar.module.css'\n\n\n\nconst AppBar = ({ isAuthenticated ,name,}) => (\n  <header className={style.header}>\n    <Navigation />\n   {isAuthenticated ? <UserMenu/>:<AuthNav />}\n  </header>  \n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n \n})\n\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","//module\nimport React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n//components\n\nimport Container from './components/Container';\nimport AppBar from './components/AppBar/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport routes from './routes';\n//styles\nimport './styles/base.scss';\nimport './App.scss';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst PhonebooksView = lazy(() => import('./views/PhonebooksView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<div className=\"loader\"></div>}>\n          <Switch>\n            <Route exact path={routes.home} component={HomeView} />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              component={RegisterView}\n              redirectTo={routes.home}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              component={LoginView}\n              redirectTo={routes.home}\n            />\n            <PrivateRoute\n              path={routes.phonebooks}\n              component={PhonebooksView}\n              redirectTo={routes.login}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","//module\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n//component\nimport store from './redux/store';\nimport App from './App';\n\n//styles\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}