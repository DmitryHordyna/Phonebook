{"version":3,"sources":["views/LoginView/LoginView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView/LoginView.module.css"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","console","warn","className","style","container","title","form","autoComplete","onSubmit","e","preventDefault","authOperations","logIn","label","type","onChange","placeholder","button","list","item","span","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"wPAQe,SAASA,IACpB,IAAMC,EAAUC,cAEhB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEZC,EAAYD,EAAZC,KAAKC,EAAOF,EAAPE,MACb,OAAQD,GACJ,IAAK,QACDL,EAASM,GACT,MACJ,IAAK,WACDJ,EAAYI,GACZ,MACJ,QACIC,QAAQC,KAAK,yCAW3B,OACU,sBAAKC,UAAWC,IAAMC,UAAtB,UACI,oBAAIF,UAAWC,IAAME,MAArB,wBACA,uBACIH,UAAWC,IAAMG,KACjBC,aAAa,MACbC,SAZK,SAACC,GAClBA,EAAEC,iBACFrB,EAASsB,IAAeC,MAAM,CAAEpB,QAAOE,eAO/B,UAMI,wBAAOQ,UAAWC,IAAMU,MAAxB,kBAEI,uBACIC,KAAK,QACLhB,KAAK,QACLC,MAAOP,EACPuB,SAAUnB,EACVoB,YAAY,qCAEpB,wBAAOd,UAAWC,IAAMU,MAAxB,qBAEI,uBACIC,KAAK,WACLhB,KAAK,WACLC,MAAOL,EACPqB,SAAUnB,EACXoB,YAAY,sBAGnB,wBACIF,KAAK,SACLZ,UAAWC,IAAMc,OAFrB,sBAMJ,oBAAIf,UAAWC,IAAMe,KAArB,SACM,qBAAIhB,UAAWC,IAAMgB,KAArB,UAA2B,sBAAMjB,UAAWC,IAAMiB,KAAvB,kBAA3B,0DAA0H,sBAAMlB,UAAWC,IAAMiB,KAAvB,oBAA1H,e,8ECnEP,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGnC,QAETwB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,0BAA0B,KAAO,wBAAwB,KAAO","file":"static/js/4.8a96490f.chunk.js","sourcesContent":["//module\nimport React, { useState} from 'react';\nimport { useDispatch } from 'react-redux';\n//component\nimport  {authOperations}  from '../../redux/auth';\n//style\nimport style from './LoginView.module.css'\n\nexport default function LoginView() {\n    const dispatch =useDispatch()\n    \n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = ({ target }) => {\n        \n        const  {name,value}=target\n        switch (name) {\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            default:\n                console.warn(\"dot't hava input with this atribute\");\n        }\n\n    }\n  \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(authOperations.logIn({ email, password }))\n        \n    }\n\n  return (\n            <div className={style.container}>\n                <h1 className={style.title}>Login Page</h1>\n                <form\n                    className={style.form}\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit}\n                    \n                >\n                    <label className={style.label}\n                    >Email\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleChange}\n                            placeholder=\"☞ DevidCoperfild@mail.ru\"\n                        /></label>\n                    <label className={style.label}>\n                        Password\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={handleChange}\n                           placeholder=\"☞ *******\"\n                        /></label>\n                    \n                    <button\n                        type='submit'\n                        className={style.button}\n                    \n                    >Enter</button>\n                </form>\n                <ul className={style.list}>\n                      <li className={style.item}><span className={style.span}>P.S.</span> If you forgot your password or email, register again, <span className={style.span}>please</span> .</li>\n                  \n                    </ul>\n      </div>\n        )\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginView_container__3W5E_\",\"title\":\"LoginView_title__KnQI_\",\"form\":\"LoginView_form__9kRj8\",\"label\":\"LoginView_label__8gyhF\",\"button\":\"LoginView_button__2FJOQ\",\"item\":\"LoginView_item__1EDs5\",\"span\":\"LoginView_span__3Asqk\"};"],"sourceRoot":""}